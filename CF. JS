export default {
  async fetch(request) {
    let url = new URL(request.url);
    let parts = url.pathname.split('/').filter(Boolean); // Get path parts

    if (parts.length < 1) {
      return new Response("Invalid URL", { status: 400 });
    }

    let username = parts[0]; // Extract GitHub username
    let subpath = parts.slice(1).join('/'); // Support subdirectories like /blog

    // Try GitHub Pages first
    let githubPagesURL = `https://${username}.github.io/built.at/${subpath}`;
    let response = await fetch(githubPagesURL, { method: 'HEAD' });

    if (response.ok) {
      // If GitHub Pages exists, proxy it without changing the URL
      return fetch(githubPagesURL);
    } else {
      // Fall back to raw GitHub content
      let rawGithubURL = `https://raw.githubusercontent.com/${username}/built.at/main/${subpath}/index.html`;
      let rawResponse = await fetch(rawGithubURL);

      if (rawResponse.ok) {
        return new Response(await rawResponse.text(), {
          headers: { 'Content-Type': 'text/html' }
        });
      } else {
        return new Response("Page not found", { status: 404 });
      }
    }
  }
};
